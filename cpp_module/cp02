Fixed::Fixed(int num)
{
	std::cout << "Int constructor called" << std::endl;
	this->value = num << this->bits;
}

Fixed::Fixed(const float num)
{
	std::cout << "Float constructor called" << std::endl;
	this->value = roundf(num * (1 << this->bits));
}

std::ostream& operator <<(std::ostream &out, const Fixed &fixed)
{
	out << fixed.toFloat();
	return (out);
}

float	Fixed::toFloat(void) const
{
	return ((float)this->value / (1 << this->bits)); 
}

int	Fixed::toInt(void) const
{
	return (this->value >> this->bits);
}

bool	operator>(Fixed const &ref) const;
bool	operator<(Fixed const &ref) const;
bool	operator>=(Fixed const &ref) const;
bool	operator<=(Fixed const &ref) const;
bool	operator==(Fixed const &ref) const;
bool	operator!=(Fixed const &ref) const;
